{"version":3,"sources":["Show.js","Practice.js","Content.js","Actions.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","width","tableWrapper","maxHeight","overflow","StickyHeadTable","props","classes","num","Math","floor","window","innerHeight","React","useState","page","setPage","rowsPerPage","setRowsPerPage","words","direction","rows","wrong","correct","result","i","length","arm","eng","word","correctness","includes","push","createData","columns","id","label","minWidth","createColumns","emptyRows","min","Paper","className","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","key","align","style","TableBody","slice","row","index","hover","role","tabIndex","value","height","colSpan","TablePagination","rowsPerPageOptions","component","count","backIconButtonProps","nextIconButtonProps","onChangePage","event","newPage","onChangeRowsPerPage","target","deletePunctuations","arr","finalString","replace","toLowerCase","CssTextField","withStyles","color","borderBottomColor","borderColor","TextField","Practice","keydownHandler","e","ctrlKey","hint","handleChange","document","getElementById","setState","answer","state","rightAnswer","answered","changeIndex","new_index","parseInt","editIndex","split","handleKeyPress","addWord","wrongWords","filter","n","helperText","addEventListener","this","removeEventListener","nextProps","order","Typography","variant","Button","size","button","endIcon","onClick","defaultValue","textField","Grid","container","spacing","item","xs","join","onChange","onKeyPress","margin","autoComplete","autoFocus","textTransform","Component","textAlign","Content","isCorrect","pop","indexOf","all","update","loading","level","request","XMLHttpRequest","open","send","onreadystatechange","readyState","status","getResponseHeader","responseText","innerHTML","nextState","mode","trim","eng_words","j","arm_words","uniqueResult","includesWords","fixDirection","wrongs","corrects","fixCorrectness","sort","a","b","temporaryValue","randomIndex","currentIndex","random","orderWords","CircularProgress","marginTop","marginLeft","CRadio","checked","Radio","theme","flexGrow","paper","padding","palette","text","secondary","menu","backgroundImage","modes","CenteredGrid","setDirection","setMode","setCount","setOrder","anchorElShow","setAnchorElShow","anchorElPractice","setAnchorElPractice","handleClick","what","stopPropagation","currentTarget","handleClose","changeCount","gutterBottom","parts","toUpperCase","getLevelName","fontSize","fullWidth","Menu","anchorEl","keepMounted","Boolean","onClose","MenuItem","FormControl","RadioGroup","aria-label","name","FormControlLabel","control","labelPlacement","createMuiTheme","typography","useNextVariants","primary","main","contrastThreshold","tonalOffset","SELECTS","getLabelName","TabPanel","children","other","hidden","aria-labelledby","Box","p","backgroundColor","background","display","tabs","borderRight","divider","location","hostname","match","ReactDOM","render","setValue","MuiThemeProvider","Tabs","orientation","newValue","Tab","a11yProps","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.185e5b1c.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nfunction createData(words, direction, wrong, correct) { \n  const result = []\n  for (let i=0; i<words.length; i+=1){\n      const arm = direction? words[i][0]: words[i][1];\n      const eng = direction? words[i][1]: words[i][0];\n      const word = words[i][0];\n      const correctness = wrong.includes(word)? 'wrong': (correct.includes(word)? 'correct': 'not practiced');\n      result.push({ arm, eng, correctness });\n  }\n  return result;\n}\n\nfunction createColumns(direction){\n    return direction? \n    [\n        { id: \"arm\", label: \"Armenian\", minWidth: 200 },\n        { id: \"eng\", label: \"English\", minWidth: 200 },\n        { id: \"correctness\", label: \"Correctness\", minWidth: 200 },\n    ] :\n    [\n        { id: \"eng\", label: \"English\", minWidth: 200 },\n        { id: \"arm\", label: \"Armenian\", minWidth: 200 },\n        { id: \"correctness\", label: \"Correctness\", minWidth: 200 },\n    ];\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\"\n  },\n  tableWrapper: {\n    maxHeight: 407,\n    overflow: \"auto\"\n  }\n});\n\nexport default function StickyHeadTable(props) {\n  const classes = useStyles();\n  const num = Math.floor(window.innerHeight / 128) + 1; \n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(num);\n  const {words, direction, wrong, correct} = props;\n  const rows = createData(words, direction, wrong, correct);\n  const columns = createColumns(direction);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n \n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.label}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  <b>{column.label}</b>\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row, index) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\n                    {columns.map(column => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={`cell${column.label}`} align={column.align}>\n                          {value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n          </TableBody>\n        </Table>\n      </div>\n      <TablePagination\n        rowsPerPageOptions={[num, num * 2, num * 4, words.length]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        backIconButtonProps={{\n          \"aria-label\": \"previous page\"\n        }}\n        nextIconButtonProps={{\n          \"aria-label\": \"next page\"\n        }}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n","import React from \"react\";\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteIcon from '@material-ui/icons/Cancel';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SaveIcon from '@material-ui/icons/Save';\nimport TextField from '@material-ui/core/TextField';import Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\nfunction deletePunctuations(arr){\n  const result = [];\n  for (let i=0; i<arr.length; i+=1){\n    const punctuationless = arr[i].replace(/[.,/#!$%^&*;:{}=\\-_`~()]/g,\"\");\n    const finalString = punctuationless.replace(/\\s{2,}/g,\" \");\n    result.push(finalString.toLowerCase())\n    }\n  return result;\n}\n\nconst CssTextField = withStyles({\n  root: {\n    '& label.Mui-focused': {\n      color: '#8ED0B1',\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: '#8ED0B1',\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: '#8ED0B1',\n      },\n      '&:hover fieldset': {\n        borderColor: '#8ED0B1',\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: '#8ED0B1',\n      },\n    },\n  },\n})(TextField);\n\nconst styles = ({\n  root: {\n    textAlign: 'center'\n  },\n  textField: {\n    width: \"50%\"\n  }\n});\n\nclass Practice extends React.Component{\n  constructor(props){\n    super(props);\n    const {words} = props;\n    this.state = {\n      index: 0,\n      answer: \"\",\n      rightAnswer: words.length > 0 ? deletePunctuations(props.words[0][1].split(\" | \")) : \"\",\n      answered: [],\n      helperText: \"\",\n      editIndex: false,\n      hint: null\n    }\n  }\n\n  keydownHandler = (e) => {\n    if(e.ctrlKey){\n      this.hint();\n    }\n  }\n  componentDidMount(){\n    document.addEventListener('keydown',this.keydownHandler);\n  }\n  componentWillUnmount(){\n    document.removeEventListener('keydown',this.keydownHandler);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps){\n    if(this.props.direction !== nextProps.direction || this.props.order !== nextProps.order){     \n      this.setState({\n        index: 0,\n        answer: \"\",\n        rightAnswer: deletePunctuations(nextProps.words[0][1].split(\" | \")),\n        answered: [],\n        helperText: \"\",\n        editIndex: false\n      })\n    }   \n}\n\n  handleChange = event => {      \n    if (event.key === 'Enter'){ return; }\n    document.getElementById(\"answer\").style.color = 'black'; \n    this.setState({answer: event.target.value});\n  };\n\n  hint = () => {\n    const {rightAnswer, answered, hint} = this.state;\n    if(hint){\n      this.setState({hint: null});\n      return;\n    }\n    document.getElementById(\"answer\").style.color = 'black'; \n    let answer = \"\";\n    for (let i=0; i<rightAnswer.length; i+=1){\n      if(!answered.includes(rightAnswer[i])){\n        answer = rightAnswer[i];\n        break;\n      }\n    }\n    this.setState({hint: answer})\n  }\n\n  changeIndex = () =>{\n    const {words} = this.props;\n    const new_index = parseInt(document.getElementById(\"newIndex\").value, 10) - 1;\n    if (new_index > words.length) return;\n    this.setState({editIndex: false, index: new_index, answer: \"\", answered: [], rightAnswer: deletePunctuations(words[new_index][1].split(\" | \"))})\n  }\n\n  handleKeyPress = event => {   \n    if (event.key === \"Enter\"){\n      const {rightAnswer, answered, index} = this.state;\n      let {answer} = this.state;\n      const {words, addWord} = this.props;\n      const  word = words[index][0];\n      answer = deletePunctuations([answer])[0];\n      if(rightAnswer.includes(answer) && !answered.includes(answer)){\n        answered.push(answer);\n        document.getElementById(\"answer\").style.color = 'black'; \n        if(rightAnswer.length <= answered.length){\n          const new_index = index < words.length - 1 ? index+1 : 0;\n          this.setState({index: new_index, answer: \"\", answered: [], rightAnswer: deletePunctuations(words[new_index][1].split(\" | \"))});\n          // addWord(word, true)\n        }else{\n          this.setState({answered, answer: \"\"})\n        }\n        this.setState({hint: null});\n      }else if(rightAnswer.includes(answer) && answered.includes(answer)){\n        document.getElementById(\"answer\").style.color = 'orange'; \n      }else{\n        document.getElementById(\"answer\").style.color = 'red'; \n        const wrongWords = rightAnswer.filter(n => !answered.includes(n));\n        for(let i=0; i<wrongWords.length; i+=1){\n          addWord(word, false);\n        }\n      }\n      \n    }\n  }\n\n  render(){\n    const {classes, words, direction} = this.props;\n    const {index, answer, rightAnswer, answered, helperText, editIndex, hint} = this.state;  \n    \n    return (\n      <div>\n        <Paper className={classes.root}>\n          {\n            words.length === 0 ?\n              <Typography variant=\"h5\" component=\"h3\">\n                No matching words.\n              </Typography>: <div>\n                  <Button variant=\"text\" \n                    size=\"large\" \n                    className={classes.button} \n                    endIcon={editIndex? <DeleteIcon onClick={() => {this.setState({editIndex: false})}} />: <EditIcon onClick={() => {this.setState({editIndex: true})}} />}>\n                      {editIndex? <TextField\n                        id=\"newIndex\"\n                        label=\"Max 15\"\n                        defaultValue={index+1}\n                        className={classes.textField}\n                        variant=\"outlined\"\n                        style={{width: \"70px\"}}\n                      /> : `${index+1}.`}\n                    {editIndex && <SaveIcon onClick={this.changeIndex} />}\n                </Button>\n                <Grid container spacing={2}>\n                  <Grid item xs={5}>\n                    <Typography variant=\"h4\" component=\"h3\" align=\"right\">\n                      {words[index][0]}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={7}>\n                    <Typography variant=\"h6\" component=\"h3\" align=\"left\">\n                      {`| ${answered.join(\" | \")}`}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <CssTextField\n                      id={\"answer\"}\n                      label={`${direction? \"English\" : \"Armenian\"} ${answered.length+1} - ${rightAnswer.length}`}\n                      className={classes.textField}\n                      value={answer}\n                      onChange={this.handleChange}\n                      onKeyPress={this.handleKeyPress}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      autoComplete=\"off\"\n                      autoFocus={true}\n                      helperText={helperText}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Grid container spacing={2}>\n                      <Grid item xs={6} />\n                      <Grid item xs={6}>\n                        {\n                          hint ? \n                            <Button size='small' style={{textTransform: 'none'}} onClick={()=>{this.setState({hint:null})}}>{hint}</Button>:\n                            <Button color=\"primary\" size='small' onClick={this.hint}>Hint</Button>\n                        }\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </div>\n          }\n        </Paper>\n      </div>\n    );\n  } \n}\n\nexport default withStyles(styles)(Practice);","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Show from './Show';\nimport Practice from './Practice';\n\nfunction orderWords(words, order){\n    if (order === 'alphabetical'){\n        words.sort(function (a, b) {\n            if (a[0].toLowerCase() > b[0].toLowerCase()) {\n                return 1;\n            }\n            if (b[0].toLowerCase() > a[0].toLowerCase()) {\n                return -1;\n            }\n            return 0;\n        });\n\n    }else if (order === 'random'){\n        var currentIndex = words.length, temporaryValue, randomIndex;\n        while (0 !== currentIndex) {\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n            temporaryValue = words[currentIndex];\n            words[currentIndex] = words[randomIndex];\n            words[randomIndex] = temporaryValue;\n        }\n    }\n    return words;\n}\n\nfunction fixDirection(words, direction){\n    const result = [];\n    for (let i=0; i<words.length; i+=1){       \n        if(words[i].trim().length > 0){\n            let arm = words[i].split(\"*\")[1].trim();\n            let eng = words[i].split(\"*\")[0].trim();\n            if(direction){\n                let eng_words = eng;\n                for (let j=0; j<words.length; j+=1){\n                    if(words[j].trim().length > 0 && arm === words[j].split(\"*\")[1].trim() && !eng_words.includes(words[j].split(\"*\")[0].trim())){\n                        eng_words = `${eng_words} | ${words[j].split(\"*\")[0].trim()}`\n                    }\n                }               \n                result.push([arm, eng_words]);\n            }else{\n                let arm_words = arm;\n                for (let j=0; j<words.length; j+=1){\n                    if(words[j].trim().length > 0 && eng === words[j].split(\"*\")[0].trim() && !arm_words.includes(words[j].split(\"*\")[1].trim())){\n                        arm_words = `${arm_words} | ${words[j].split(\"*\")[1].trim()}`\n                    }\n                }\n                result.push([eng, arm_words])\n            }\n        }\n    }\n    const uniqueResult = [];\n    const includesWords = [];\n    for (let i=0; i <result.length; i+=1){\n        if(!includesWords.includes(result[i][0])){\n            includesWords.push(result[i][0]);\n            uniqueResult.push(result[i]);\n        }\n    }    \n    return uniqueResult;\n}\n\nfunction fixCorrectness(words, wrongs, corrects, count){\n    if (count === 'all') return words;\n    if (count === 'wrong'){\n        const result = [];\n        for (let i=0; i<words.length; i+=1){\n            if(wrongs.includes(words[i][0])){\n                result.push(words[i])\n            }  \n        }\n        return result;\n    }\n    const result = [];\n    for (let i=0; i<words.length; i+=1){\n        if(corrects.includes(words[i][0])){\n            result.push(words[i])\n        }  \n    }\n    return result;\n}\n\nexport default class Content extends React.Component{\n    constructor(props){\n        super(props);        \n        this.state = {\n            all: [],\n            wrong: [],\n            correct: [],\n            update: false,\n            loading: true\n        }\n    }\n\n    componentDidMount(){\n        const {level} = this.props;\n        var request = new XMLHttpRequest();\n        request.open('GET', `https://melqonyang.github.io/improve-your-english/words/${level}.txt`, true);\n        request.send(null);\n        request.onreadystatechange = () => {           \n            if (request.readyState === 4 && request.status === 200) {\n                var type = request.getResponseHeader('Content-Type');                \n                if (type.indexOf(\"text\") !== 1){                   \n                    const words = request.responseText.split('\\n');\n                    this.setState({all: words, update: true, loading: false});\n                    document.getElementById(\"wordsCount\").innerHTML = `(${words.length - 1} words)`;\n                }\n            }\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps){\n        if(this.props.level !== nextProps.level){\n            this.setState({loading: true})\n            const {level} = nextProps;\n            var request = new XMLHttpRequest();\n            request.open('GET', `https://melqonyang.github.io/improve-your-english/words/${level}.txt`, true);\n            request.send(null);\n            request.onreadystatechange = () => {\n                if (request.readyState === 4 && request.status === 200) {\n                    var type = request.getResponseHeader('Content-Type');\n                    if (type.indexOf(\"text\") !== 1) {\n                        const words = request.responseText.split('\\n');\n                        this.setState({all: words, update: true, loading: false});\n                        document.getElementById(\"wordsCount\").innerHTML = `(${words.length} words)`;\n                    }\n                }\n            } \n        }   \n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {mode, direction, count, order} = this.props;              \n        if ( nextState.update || nextState.loading !== this.state.loading || nextProps.mode !== mode || nextProps.direction !== direction || nextProps.count !== count || nextProps.order !== order) {          \n            this.setState({update: false});\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    addWord = (word, isCorrect) => {\n        const {wrong, correct} = this.state;       \n        if(!isCorrect){      \n            if (!wrong.includes(word)){\n                wrong.push(word);\n                this.setState({wrong});\n            }\n            if (correct.includes(word)){\n                correct.pop(correct.indexOf(word));\n                this.setState({correct});\n            }\n        }else{\n            if (!correct.includes(word)){\n                correct.push(word);\n                this.setState({correct});\n            }\n            if (wrong.includes(word)){\n                wrong.pop(wrong.indexOf(word));\n                this.setState({wrong});\n            }\n        }\n    }\n\n    render(){\n        const {mode, direction, count, order} = this.props;\n        let words = this.state.all;\n        const {correct, wrong, loading} = this.state;\n        words = fixDirection(words, direction);       \n        words = orderWords([...words], order);\n        words = fixCorrectness(words, wrong, correct, count);\n        \n        return (\n            <div>\n                {\n                    loading? <CircularProgress style={{marginTop: \"10%\", marginLeft: \"50%\"}} color=\"secondary\"/> : (\n                        mode === 'show' ? <Show words={words} direction={direction} correct={correct} wrong={wrong}/> : \n                            <Practice words={words} direction={direction} addWord={this.addWord} order={order}/>\n                    )\n                }\n            </div>\n        )\n    }\n}","import React, { useState } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Typography from \"@material-ui/core/Typography\";\nimport More from \"@material-ui/icons/ArrowDropDown\";\nimport Change from \"@material-ui/icons/SyncAlt\";\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Content from './Content';\n\nfunction getLevelName(label){\n    const parts = label.split(\"_\");\n    return parts[0].toUpperCase() + (parts[1] ? ` ${parts[1]}`: \"\");\n  }\n\nconst CRadio = withStyles({\n  root: {\n    color: \"#8ED0B1\",\n    '&$checked': {\n      color: \"#8ED0B1\",\n    },\n  },\n  checked: {},\n})(props => <Radio color=\"default\" {...props} />);\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  },\n  menu: {\n    backgroundImage: \"linear-gradient(#1f4037, #99f2c8)\",\n    color: \"white\"\n  },\n  button: {\n    margin: theme.spacing(1),\n    backgroundImage: \"linear-gradient(#1f4037, #99f2c8)\",\n    color: \"white\"\n  }\n}));\n\nconst modes = [\n  \"show all words\",\n  \"show only wrong words\",\n  \"show only correct words\",\n  \"practice all words\",\n  \"practice only wrong words\",\n  \"practice only correct words\"\n];\n\nexport default function CenteredGrid(props) {\n  const classes = useStyles();\n  const {level} = props;\n  const [direction, setDirection] = useState(true); // true -> arm or false -> eng\n  const [mode, setMode] = useState(\"show\"); // show or practioce\n  const [count, setCount] = useState(\"all\"); // all, wrongs or corrects\n  const [order, setOrder] = useState(\"random\"); // random, alphabetical or your\n  const [anchorElShow, setAnchorElShow] = React.useState(null);\n  const [anchorElPractice, setAnchorElPractice] = React.useState(null);\n\n  const handleClick = (event, what) => {\n    event.stopPropagation()\n    if (what === \"show\") {\n      setAnchorElShow(event.currentTarget);\n    } else {\n      setAnchorElPractice(event.currentTarget);\n    }\n  };\n\n  const handleClose = what => {\n    if (what === \"show\") {\n      setAnchorElShow(null);\n    } else {\n      setAnchorElPractice(null);\n    }\n  };\n\n  const changeCount = index => {\n    if (index < 3){\n      setMode(\"show\");\n      handleClose('show');\n    }else{\n      setMode(\"practice\");\n      handleClose('practice');\n    }\n    switch (index) {\n      case 0:\n      case 3:\n        setCount('all');\n        break;\n      case 1:\n      case 4:\n        setCount('wrong');\n        break;\n      case 2:\n      case 5:\n        setCount('correct');\n        break;\n      default:\n        break;\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <Typography variant=\"h3\" component=\"h3\" gutterBottom align=\"center\">\n            {getLevelName(level)} <span id=\"wordsCount\" style={{fontSize: 15}}></span>\n            <Button\n              variant=\"contained\"\n              className={classes.button}\n              onClick={() => {\n                setDirection(!direction);\n              }}\n            >\n              {direction ? \"Arm\" : \"Eng\"} <Change /> {direction ? \"Eng\" : \"Arm\"}\n            </Button>\n          </Typography>\n        </Grid>\n        <Grid item xs={mode === \"show\" ? 8 : 4}>\n          <Button\n            variant=\"contained\"\n            fullWidth\n            className={classes.menu}\n            onClick={() => setMode(\"show\")}\n            endIcon={<More onClick={e => {handleClick(e, \"show\")}} />}\n            style={{\n              height: mode === \"show\" ? \"70px\" : \"50px\",\n              marginTop: mode === \"show\" ? \"0px\" : \"10px\"\n            }}\n          >\n            {mode === 'show' ? `Show ${count} in ${order} order` : \"Show\"}\n          </Button>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorElShow}\n            keepMounted\n            open={Boolean(anchorElShow)}\n            onClose={() => handleClose(\"show\")}\n          >\n            {modes.map((item, index) => {\n              return item.split(\" \")[0] === \"show\" ? (\n                <MenuItem key={item} onClick={()=>changeCount(index)}>\n                  {item}\n                </MenuItem>\n              ) : null;\n            })}\n          </Menu>\n        </Grid>\n        <Grid item xs={mode === \"show\" ? 4 : 8}>\n          <Button\n            variant=\"contained\"\n            onClick={() => setMode(\"practice\")}\n            fullWidth\n            className={classes.menu}\n            endIcon={\n              <More\n                onClick={e => {\n                  handleClick(e, \"practice\");\n                }}\n              />\n            }\n            style={{\n              height: mode === \"show\" ? \"50px\" : \"70px\",\n              marginTop: mode === \"show\" ? \"10px\" : \"0px\"\n            }}\n          >\n            {mode === 'practice'? `Practice ${count} in ${order} order` : \"Practice\"}\n          </Button>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorElPractice}\n            keepMounted\n            open={Boolean(anchorElPractice)}\n            onClose={() => handleClose(\"practice\")}\n          >\n            {modes.map((item, index) => {\n              return item.split(\" \")[0] === \"practice\" ? (\n                <MenuItem key={item} onClick={()=>changeCount(index)}>\n                  {item}\n                </MenuItem>\n              ) : null;\n            })}\n          </Menu>\n        </Grid>\n        <Grid item xs={12} style={{textAlign:\"center\"}}>\n        <FormControl>\n          <RadioGroup aria-label=\"position\" name=\"position\" value={order} onChange={(event) => {setOrder(event.target.value)}} row>\n            <FormControlLabel\n              value=\"random\"\n              control={<CRadio />}\n              label=\"Random order\"\n              labelPlacement=\"start\"\n            />\n            <FormControlLabel\n              value=\"alphabetical\"\n              control={<CRadio />}\n              label=\"Alphabetical order\"\n              labelPlacement=\"start\"\n            />\n            <FormControlLabel\n              value=\"your\"\n              control={<CRadio />}\n              label=\"Book order\"\n              labelPlacement=\"start\"\n            />\n          </RadioGroup>\n        </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <Content level={level} mode={mode} direction={direction} count={count} order={order} />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Actions from './Actions';\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true\n  },\n  palette: {\n    primary: { main: '#8ED0B1' },\n    secondary: { main: \"#030303\" },\n    contrastThreshold: 3,\n    tonalOffset: 0.2\n  }\n});\n\nconst SELECTS = ['level_1', 'level_2', 'level_3', 'level_4', 'level_5', 'level_6', 'phrases', 'irregular_verbs', 'another', 'all']; \nfunction getLabelName(label){\n  const parts = label.split(\"_\");\n  return parts[0].toUpperCase() + (parts[1] ? ` ${parts[1]}`: \"\");\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      <Box p={3}>{children}</Box>\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n    height: 224,\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n    backgroundImage: \"linear-gradient(#1f4037, #99f2c8)\",\n    color: \"white\",\n    height: \"100vh\",\n    minWidth: \"17%\"\n  },\n}));\n\nexport default function AppBar() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  function handleChange(event, newValue) {\n    setValue(newValue);\n  }\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <Tabs\n          orientation=\"vertical\"\n          variant=\"scrollable\"\n          value={value}\n          onChange={handleChange}\n          aria-label=\"Vertical tabs example\"\n          className={classes.tabs}\n        >\n          {\n            SELECTS.map((label, index) => <Tab key={label} label={getLabelName(label)} {...a11yProps(index)} />)\n          }\n        </Tabs>\n        <TabPanel value={value} index={value}>\n          <Actions level={SELECTS[value]} />\n        </TabPanel>\n      </div>\n    </MuiThemeProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}