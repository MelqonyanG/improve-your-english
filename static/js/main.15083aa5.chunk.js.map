{"version":3,"sources":["Show.js","Practice.js","Content.js","Actions.js","Listening_content.js","Listening_levels.js","Tips.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","width","tableWrapper","maxHeight","overflow","StickyHeadTable","props","classes","num","Math","floor","window","innerHeight","React","useState","page","setPage","rowsPerPage","setRowsPerPage","words","direction","rows","wrong","correct","result","i","length","arm","eng","word","correctness","includes","push","createData","columns","id","label","minWidth","createColumns","emptyRows","min","Paper","className","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","key","align","style","TableBody","slice","row","index","hover","role","tabIndex","value","height","colSpan","TablePagination","rowsPerPageOptions","component","count","backIconButtonProps","nextIconButtonProps","onChangePage","event","newPage","onChangeRowsPerPage","target","deletePunctuations","arr","finalString","replace","toLowerCase","CssTextField","withStyles","color","borderBottomColor","borderColor","TextField","Practice","keydownHandler","e","ctrlKey","hint","handleChange","document","getElementById","setState","answer","state","rightAnswer","answered","changeIndex","new_index","parseInt","editIndex","split","handleKeyPress","addWord","wrongWords","filter","n","helperText","addEventListener","this","removeEventListener","nextProps","order","mode","Typography","variant","Button","size","button","endIcon","onClick","defaultValue","textField","Grid","container","spacing","item","xs","join","onChange","onKeyPress","margin","autoComplete","autoFocus","textTransform","Component","textAlign","Content","isCorrect","pop","indexOf","all","update","loading","level","request","XMLHttpRequest","open","send","onreadystatechange","readyState","status","getResponseHeader","responseText","innerHTML","nextState","trim","eng_words","j","arm_words","uniqueResult","includesWords","fixDirection","wrongs","corrects","fixCorrectness","sort","a","b","temporaryValue","randomIndex","currentIndex","random","orderWords","CircularProgress","marginTop","marginLeft","CRadio","checked","Radio","theme","flexGrow","paper","padding","palette","text","secondary","menu","backgroundImage","modes","CenteredGrid","setDirection","setMode","setCount","setOrder","anchorElShow","setAnchorElShow","anchorElPractice","setAnchorElPractice","handleClick","what","stopPropagation","currentTarget","handleClose","changeCount","gutterBottom","parts","toUpperCase","getLevelName","fontSize","fullWidth","Menu","anchorEl","keepMounted","Boolean","onClose","MenuItem","FormControl","RadioGroup","aria-label","name","FormControlLabel","control","labelPlacement","maxWidth","backgroundColor","background","inline","display","TOPICS","AlignItemsList","List","topic","ListItem","alignItems","ListItemAvatar","Avatar","alt","src","toLocaleLowerCase","replaceAll","ListItemText","primary","Fragment","startIcon","setTest","Divider","borderRadius","slider","float","paddingRight","LEVELS","truncateWholeWords","maxLength","SelectedListItem","selectedIndex","setSelectedIndex","test","settext","response","setResponse","playbackRate","setPlaybackRate","getText","isCheck","textChunks","match","answerChunks","validatedText","md","cursor","paddingLeft","paddingBottom","Slider","newValue","aria-labelledby","url","playing","controls","multiline","placeholder","dangerouslySetInnerHTML","__html","selected","handleListItemClick","ListItemIcon","emails","minwidth","SimpleDialog","sendMessage","setSendMessage","email","message","values","setValues","prop","selectedValue","Dialog","DialogTitle","DialogContent","form","noValidate","onSubmit","preventDefault","console","log","required","type","submit","DialogContentText","DialogActions","SimpleDialogDemo","setOpen","setSelectedValue","position","createMuiTheme","typography","useNextVariants","main","contrastThreshold","tonalOffset","SELECTS","getLabelName","TabPanel","children","other","hidden","Box","p","tabs","borderRight","divider","AppBar","setValue","Tabs","orientation","Tab","a11yProps","location","hostname","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.15083aa5.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nfunction createData(words, direction, wrong, correct) { \n  const result = []\n  for (let i=0; i<words.length; i+=1){\n      const arm = direction? words[i][0]: words[i][1];\n      const eng = direction? words[i][1]: words[i][0];\n      const word = words[i][0];\n      const correctness = wrong.includes(word)? 'wrong': (correct.includes(word)? 'correct': 'not practiced');\n      result.push({ arm, eng, correctness });\n  }\n  return result;\n}\n\nfunction createColumns(direction){\n    return direction? \n    [\n        { id: \"arm\", label: \"Armenian\", minWidth: 200 },\n        { id: \"eng\", label: \"English\", minWidth: 200 },\n        { id: \"correctness\", label: \"Correctness\", minWidth: 200 },\n    ] :\n    [\n        { id: \"eng\", label: \"English\", minWidth: 200 },\n        { id: \"arm\", label: \"Armenian\", minWidth: 200 },\n        { id: \"correctness\", label: \"Correctness\", minWidth: 200 },\n    ];\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\"\n  },\n  tableWrapper: {\n    maxHeight: 407,\n    overflow: \"auto\"\n  }\n});\n\nexport default function StickyHeadTable(props) {\n  const classes = useStyles();\n  const num = Math.floor(window.innerHeight / 128) + 1; \n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(8);\n  const {words, direction, wrong, correct} = props;\n  const rows = createData(words, direction, wrong, correct);\n  const columns = createColumns(direction);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n \n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.label}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  <b>{column.label}</b>\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row, index) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\n                    {columns.map(column => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={`cell${column.label}`} align={column.align}>\n                          {value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n          </TableBody>\n        </Table>\n      </div>\n      <TablePagination\n        rowsPerPageOptions={[num, num * 2, num * 4, words.length]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        backIconButtonProps={{\n          \"aria-label\": \"previous page\"\n        }}\n        nextIconButtonProps={{\n          \"aria-label\": \"next page\"\n        }}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n","import React from \"react\";\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteIcon from '@material-ui/icons/Cancel';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SaveIcon from '@material-ui/icons/Save';\nimport TextField from '@material-ui/core/TextField';import Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\nfunction deletePunctuations(arr){\n  const result = [];\n  for (let i=0; i<arr.length; i+=1){\n    const punctuationless = arr[i].replace(/[.,/#!$%^&*;:{}=\\-_`~()]/g,\"\");\n    const finalString = punctuationless.replace(/\\s{2,}/g,\" \");\n    result.push(finalString.toLowerCase())\n    }\n  return result;\n}\n\nconst CssTextField = withStyles({\n  root: {\n    '& label.Mui-focused': {\n      color: '#8ED0B1',\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: '#8ED0B1',\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: '#8ED0B1',\n      },\n      '&:hover fieldset': {\n        borderColor: '#8ED0B1',\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: '#8ED0B1',\n      },\n    },\n  },\n})(TextField);\n\nconst styles = ({\n  root: {\n    textAlign: 'center'\n  },\n  textField: {\n    width: \"50%\"\n  }\n});\n\nclass Practice extends React.Component{\n  constructor(props){\n    super(props);\n    const {words} = props;\n    this.state = {\n      index: 0,\n      answer: \"\",\n      rightAnswer: words.length > 0 ? deletePunctuations(props.words[0][1].split(\" | \")) : \"\",\n      answered: [],\n      helperText: \"\",\n      editIndex: false,\n      hint: null\n    }\n  }\n\n  keydownHandler = (e) => {\n    if(e.ctrlKey){\n      this.hint();\n    }\n  }\n  componentDidMount(){\n    document.addEventListener('keydown',this.keydownHandler);\n  }\n  componentWillUnmount(){\n    document.removeEventListener('keydown',this.keydownHandler);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps){\n    if(this.props.direction !== nextProps.direction || this.props.order !== nextProps.order || this.props.mode !== nextProps.mode){     \n      this.setState({\n        index: 0,\n        answer: \"\",\n        rightAnswer: deletePunctuations(nextProps.words[0][1].split(\" | \")),\n        answered: [],\n        helperText: \"\",\n        editIndex: false\n      })\n    }   \n}\n\n  handleChange = event => {      \n    if (event.key === 'Enter'){ return; }\n    document.getElementById(\"answer\").style.color = 'black'; \n    this.setState({answer: event.target.value});\n  };\n\n  hint = () => {\n    const {rightAnswer, answered, hint} = this.state;\n    if(hint){\n      this.setState({hint: null});\n      return;\n    }\n    document.getElementById(\"answer\").style.color = 'black'; \n    let answer = \"\";\n    for (let i=0; i<rightAnswer.length; i+=1){\n      if(!answered.includes(rightAnswer[i])){\n        answer = rightAnswer[i];\n        break;\n      }\n    }\n    this.setState({hint: answer})\n  }\n\n  changeIndex = () =>{\n    const {words} = this.props;\n    const new_index = parseInt(document.getElementById(\"newIndex\").value, 10) - 1;\n    if (new_index > words.length) return;\n    this.setState({editIndex: false, index: new_index, answer: \"\", answered: [], rightAnswer: deletePunctuations(words[new_index][1].split(\" | \"))})\n  }\n\n  handleKeyPress = event => {   \n    if (event.key === \"Enter\"){\n      const {rightAnswer, answered, index} = this.state;\n      let {answer} = this.state;\n      const {words, addWord} = this.props;\n      const  word = words[index][0];\n      answer = deletePunctuations([answer])[0];\n      if(rightAnswer.includes(answer) && !answered.includes(answer)){\n        answered.push(answer);\n        document.getElementById(\"answer\").style.color = 'black'; \n        if(rightAnswer.length <= answered.length){\n          const new_index = index < words.length - 1 ? index+1 : 0;\n          this.setState({index: new_index, answer: \"\", answered: [], rightAnswer: deletePunctuations(words[new_index][1].split(\" | \"))});\n          // addWord(word, true)\n        }else{\n          this.setState({answered, answer: \"\"})\n        }\n        this.setState({hint: null});\n      }else if(rightAnswer.includes(answer) && answered.includes(answer)){\n        document.getElementById(\"answer\").style.color = 'orange'; \n      }else{\n        document.getElementById(\"answer\").style.color = 'red'; \n        const wrongWords = rightAnswer.filter(n => !answered.includes(n));\n        for(let i=0; i<wrongWords.length; i+=1){\n          addWord(word, false);\n        }\n      }\n      \n    }\n  }\n\n  render(){\n    const {classes, words, direction} = this.props;\n    const {index, answer, rightAnswer, answered, helperText, editIndex, hint} = this.state;  \n    \n    return (\n      <div>\n        <Paper className={classes.root}>\n          {\n            words.length === 0 ?\n              <Typography variant=\"h5\" component=\"h3\">\n                No matching words.\n              </Typography>: <div>\n                  <Button variant=\"text\" \n                    size=\"large\" \n                    className={classes.button} \n                    endIcon={editIndex? <DeleteIcon onClick={() => {this.setState({editIndex: false})}} />: <EditIcon onClick={() => {this.setState({editIndex: true})}} />}>\n                      {editIndex? <TextField\n                        id=\"newIndex\"\n                        label=\"Max 15\"\n                        defaultValue={index+1}\n                        className={classes.textField}\n                        variant=\"outlined\"\n                        style={{width: \"70px\"}}\n                      /> : `${index+1}.`}\n                    {editIndex && <SaveIcon onClick={this.changeIndex} />}\n                </Button>\n                <Grid container spacing={2}>\n                  <Grid item xs={5}>\n                    <Typography variant=\"h4\" component=\"h3\" align=\"right\">\n                      {words[index][0]}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={7}>\n                    <Typography variant=\"h6\" component=\"h3\" align=\"left\">\n                      {`| ${answered.join(\" | \")}`}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <CssTextField\n                      id={\"answer\"}\n                      label={`${direction? \"English\" : \"Armenian\"} ${answered.length+1} - ${rightAnswer.length}`}\n                      className={classes.textField}\n                      value={answer}\n                      onChange={this.handleChange}\n                      onKeyPress={this.handleKeyPress}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      autoComplete=\"off\"\n                      autoFocus={true}\n                      helperText={helperText}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Grid container spacing={2}>\n                      <Grid item xs={6} />\n                      <Grid item xs={6}>\n                        {\n                          hint ? \n                            <Button size='small' style={{textTransform: 'none'}} onClick={()=>{this.setState({hint:null})}}>{hint}</Button>:\n                            <Button color=\"primary\" size='small' onClick={this.hint}>Hint</Button>\n                        }\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </div>\n          }\n        </Paper>\n      </div>\n    );\n  } \n}\n\nexport default withStyles(styles)(Practice);","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Show from './Show';\nimport Practice from './Practice';\n\nfunction orderWords(words, order){\n    if (order === 'alphabetical'){\n        words.sort(function (a, b) {\n            if (a[0].toLowerCase() > b[0].toLowerCase()) {\n                return 1;\n            }\n            if (b[0].toLowerCase() > a[0].toLowerCase()) {\n                return -1;\n            }\n            return 0;\n        });\n\n    }else if (order === 'random'){\n        var currentIndex = words.length, temporaryValue, randomIndex;\n        while (0 !== currentIndex) {\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n            temporaryValue = words[currentIndex];\n            words[currentIndex] = words[randomIndex];\n            words[randomIndex] = temporaryValue;\n        }\n    }\n    return words;\n}\n\nfunction fixDirection(words, direction){\n    const result = [];\n    for (let i=0; i<words.length; i+=1){       \n        if(words[i].trim().length > 0){\n            let arm = words[i].split(\"*\")[1].trim();\n            let eng = words[i].split(\"*\")[0].trim();\n            if(direction){\n                let eng_words = eng;\n                for (let j=0; j<words.length; j+=1){\n                    if(words[j].trim().length > 0 && arm === words[j].split(\"*\")[1].trim() && !eng_words.includes(words[j].split(\"*\")[0].trim())){\n                        eng_words = `${eng_words} | ${words[j].split(\"*\")[0].trim()}`\n                    }\n                }               \n                result.push([arm, eng_words]);\n            }else{\n                let arm_words = arm;\n                for (let j=0; j<words.length; j+=1){\n                    if(words[j].trim().length > 0 && eng === words[j].split(\"*\")[0].trim() && !arm_words.includes(words[j].split(\"*\")[1].trim())){\n                        arm_words = `${arm_words} | ${words[j].split(\"*\")[1].trim()}`\n                    }\n                }\n                result.push([eng, arm_words])\n            }\n        }\n    }\n    const uniqueResult = [];\n    const includesWords = [];\n    for (let i=0; i <result.length; i+=1){\n        if(!includesWords.includes(result[i][0])){\n            includesWords.push(result[i][0]);\n            uniqueResult.push(result[i]);\n        }\n    }    \n    return uniqueResult;\n}\n\nfunction fixCorrectness(words, wrongs, corrects, count){\n    if (count === 'all') return words;\n    if (count === 'wrong'){\n        const result = [];\n        for (let i=0; i<words.length; i+=1){\n            if(wrongs.includes(words[i][0])){\n                result.push(words[i])\n            }  \n        }\n        return result;\n    }\n    const result = [];\n    for (let i=0; i<words.length; i+=1){\n        if(corrects.includes(words[i][0])){\n            result.push(words[i])\n        }  \n    }\n    return result;\n}\n\nexport default class Content extends React.Component{\n    constructor(props){\n        super(props);        \n        this.state = {\n            all: [],\n            wrong: [],\n            correct: [],\n            update: false,\n            loading: true\n        }\n    }\n\n    componentDidMount(){\n        const {level} = this.props;\n        var request = new XMLHttpRequest();\n        request.open('GET', `https://melqonyang.github.io/improve-your-english/words/${level}.txt`, true);\n        request.send(null);\n        request.onreadystatechange = () => {           \n            if (request.readyState === 4 && request.status === 200) {\n                var type = request.getResponseHeader('Content-Type');                \n                if (type.indexOf(\"text\") !== 1){                   \n                    const words = request.responseText.split('\\n');\n                    this.setState({all: words, update: true, loading: false});\n                    document.getElementById(\"wordsCount\").innerHTML = `(${words.length - 1} words)`;\n                }\n            }\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps){\n        if(this.props.level !== nextProps.level){\n            this.setState({loading: true})\n            const {level} = nextProps;\n            var request = new XMLHttpRequest();\n            request.open('GET', `https://melqonyang.github.io/improve-your-english/words/${level}.txt`, true);\n            request.send(null);\n            request.onreadystatechange = () => {\n                if (request.readyState === 4 && request.status === 200) {\n                    var type = request.getResponseHeader('Content-Type');\n                    if (type.indexOf(\"text\") !== 1) {\n                        const words = request.responseText.split('\\n');\n                        this.setState({all: words, update: true, loading: false});\n                        document.getElementById(\"wordsCount\").innerHTML = `(${words.length} words)`;\n                    }\n                }\n            } \n        }   \n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {mode, direction, count, order} = this.props;              \n        if ( nextState.update || nextState.loading !== this.state.loading || nextProps.mode !== mode || nextProps.direction !== direction || nextProps.count !== count || nextProps.order !== order) {          \n            this.setState({update: false});\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    addWord = (word, isCorrect) => {\n        const {wrong, correct} = this.state;       \n        if(!isCorrect){      \n            if (!wrong.includes(word)){\n                wrong.push(word);\n                this.setState({wrong});\n            }\n            if (correct.includes(word)){\n                correct.pop(correct.indexOf(word));\n                this.setState({correct});\n            }\n        }else{\n            if (!correct.includes(word)){\n                correct.push(word);\n                this.setState({correct});\n            }\n            if (wrong.includes(word)){\n                wrong.pop(wrong.indexOf(word));\n                this.setState({wrong});\n            }\n        }\n    }\n\n    render(){\n        const {mode, direction, count, order} = this.props;\n        let words = this.state.all;\n        const {correct, wrong, loading} = this.state;\n        words = fixDirection(words, direction);       \n        words = orderWords([...words], order);\n        words = fixCorrectness(words, wrong, correct, count);\n        \n        return (\n            <div>\n                {\n                    loading? <CircularProgress style={{marginTop: \"10%\", marginLeft: \"50%\"}} color=\"secondary\"/> : (\n                        mode === 'show' ? <Show words={words} direction={direction} correct={correct} wrong={wrong}/> : \n                            <Practice words={words} direction={direction} addWord={this.addWord} order={order} mode={mode}/>\n                    )\n                }\n            </div>\n        )\n    }\n}","import React, { useState } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Typography from \"@material-ui/core/Typography\";\nimport More from \"@material-ui/icons/ArrowDropDown\";\nimport Change from \"@material-ui/icons/SyncAlt\";\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Content from './Content';\n\nfunction getLevelName(label){\n    const parts = label.split(\"_\");\n    return parts[0].toUpperCase() + (parts[1] ? ` ${parts[1]}`: \"\");\n  }\n\nconst CRadio = withStyles({\n  root: {\n    color: \"#8ED0B1\",\n    '&$checked': {\n      color: \"#8ED0B1\",\n    },\n  },\n  checked: {},\n})(props => <Radio color=\"default\" {...props} />);\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  },\n  menu: {\n    backgroundImage: \"linear-gradient(#1f4037, #99f2c8)\",\n    color: \"white\"\n  },\n  button: {\n    margin: theme.spacing(1),\n    backgroundImage: \"linear-gradient(#1f4037, #99f2c8)\",\n    color: \"white\"\n  }\n}));\n\nconst modes = [\n  \"show all words\",\n  \"show only wrong words\",\n  \"show only correct words\",\n  \"practice all words\",\n  \"practice only wrong words\",\n  \"practice only correct words\"\n];\n\nexport default function CenteredGrid(props) {\n  const classes = useStyles();\n  const {level} = props;\n  const [direction, setDirection] = useState(true); // true -> arm or false -> eng\n  const [mode, setMode] = useState(\"show\"); // show or practioce\n  const [count, setCount] = useState(\"all\"); // all, wrongs or corrects\n  const [order, setOrder] = useState(\"random\"); // random, alphabetical or your\n  const [anchorElShow, setAnchorElShow] = React.useState(null);\n  const [anchorElPractice, setAnchorElPractice] = React.useState(null);\n\n  const handleClick = (event, what) => {\n    event.stopPropagation()\n    if (what === \"show\") {\n      setAnchorElShow(event.currentTarget);\n    } else {\n      setAnchorElPractice(event.currentTarget);\n    }\n  };\n\n  const handleClose = what => {\n    if (what === \"show\") {\n      setAnchorElShow(null);\n    } else {\n      setAnchorElPractice(null);\n    }\n  };\n\n  const changeCount = index => {\n    if (index < 3){\n      setMode(\"show\");\n      handleClose('show');\n    }else{\n      setMode(\"practice\");\n      handleClose('practice');\n    }\n    switch (index) {\n      case 0:\n      case 3:\n        setCount('all');\n        break;\n      case 1:\n      case 4:\n        setCount('wrong');\n        break;\n      case 2:\n      case 5:\n        setCount('correct');\n        break;\n      default:\n        break;\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <Typography variant=\"h3\" component=\"h3\" gutterBottom align=\"center\">\n            {getLevelName(level)} <span id=\"wordsCount\" style={{fontSize: 15}}></span>\n            <Button\n              variant=\"contained\"\n              className={classes.button}\n              onClick={() => {\n                setDirection(!direction);\n              }}\n            >\n              {direction ? \"Arm\" : \"Eng\"} <Change /> {direction ? \"Eng\" : \"Arm\"}\n            </Button>\n          </Typography>\n        </Grid>\n        <Grid item xs={mode === \"show\" ? 8 : 4}>\n          <Button\n            variant=\"contained\"\n            fullWidth\n            className={classes.menu}\n            onClick={() => setMode(\"show\")}\n            endIcon={<More onClick={e => {handleClick(e, \"show\")}} />}\n            style={{\n              height: mode === \"show\" ? \"70px\" : \"50px\",\n              marginTop: mode === \"show\" ? \"0px\" : \"10px\"\n            }}\n          >\n            {mode === 'show' ? `Show ${count} in ${order} order` : \"Show\"}\n          </Button>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorElShow}\n            keepMounted\n            open={Boolean(anchorElShow)}\n            onClose={() => handleClose(\"show\")}\n          >\n            {modes.map((item, index) => {\n              return item.split(\" \")[0] === \"show\" ? (\n                <MenuItem key={item} onClick={()=>changeCount(index)}>\n                  {item}\n                </MenuItem>\n              ) : null;\n            })}\n          </Menu>\n        </Grid>\n        <Grid item xs={mode === \"show\" ? 4 : 8}>\n          <Button\n            variant=\"contained\"\n            onClick={() => setMode(\"practice\")}\n            fullWidth\n            className={classes.menu}\n            endIcon={\n              <More\n                onClick={e => {\n                  handleClick(e, \"practice\");\n                }}\n              />\n            }\n            style={{\n              height: mode === \"show\" ? \"50px\" : \"70px\",\n              marginTop: mode === \"show\" ? \"10px\" : \"0px\"\n            }}\n          >\n            {mode === 'practice'? `Practice ${count} in ${order} order` : \"Practice\"}\n          </Button>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorElPractice}\n            keepMounted\n            open={Boolean(anchorElPractice)}\n            onClose={() => handleClose(\"practice\")}\n          >\n            {modes.map((item, index) => {\n              return item.split(\" \")[0] === \"practice\" ? (\n                <MenuItem key={item} onClick={()=>changeCount(index)}>\n                  {item}\n                </MenuItem>\n              ) : null;\n            })}\n          </Menu>\n        </Grid>\n        <Grid item xs={12} style={{textAlign:\"center\"}}>\n        <FormControl>\n          <RadioGroup aria-label=\"position\" name=\"position\" value={order} onChange={(event) => {setOrder(event.target.value)}} row>\n            <FormControlLabel\n              value=\"random\"\n              control={<CRadio />}\n              label=\"Random order\"\n              labelPlacement=\"start\"\n            />\n            <FormControlLabel\n              value=\"alphabetical\"\n              control={<CRadio />}\n              label=\"Alphabetical order\"\n              labelPlacement=\"start\"\n            />\n            <FormControlLabel\n              value=\"your\"\n              control={<CRadio />}\n              label=\"Book order\"\n              labelPlacement=\"start\"\n            />\n          </RadioGroup>\n        </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <Content level={level} mode={mode} direction={direction} count={count} order={order} />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from '@material-ui/core/Button';\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: \"90ch\",\n    backgroundColor: theme.palette.background.paper,\n    marginTop: 10\n  },\n  inline: {\n    display: \"inline\"\n  },\n  button: {\n    backgroundColor: '#de7a7a'\n  },\n}));\n\nconst TOPICS = {\n    \"A1\": [\n        \"A request from your boss\",\n        \"A voicemail message\",\n        \"Booking a table\"\n    ],\n    \"A2\": [\n\n    ],\n    \"B1\": [\n\n    ],\n    \"B2\": [\n\n    ],\n    \"C1\": [\n\n    ]\n}\n\nexport default function AlignItemsList(props) {\n  const classes = useStyles();\n\n  const level = props.level.split(\" \")[1];\n\n  return (\n    <List className={classes.root}>\n      {TOPICS[level].map((topic, index) => (\n        <div key={topic}>\n          <ListItem alignItems=\"flex-start\">\n            <ListItemAvatar>\n              <Avatar alt={topic} src={`https://melqonyang.github.io/improve-your-english/listening/A1/images/${topic.toLocaleLowerCase().replaceAll(\" \", \"_\")}.jpg`} />\n            </ListItemAvatar>\n            <ListItemText\n              primary=\"Brunch this weekend?\"\n              secondary={\n                <React.Fragment>\n                  <Typography\n                    component=\"span\"\n                    variant=\"subtitle1\"\n                    className={classes.inline}\n                    color=\"textPrimary\"\n                  >\n                    <b>{topic}</b>\n                  </Typography>\n                </React.Fragment>\n              }\n            />\n            <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.button}\n                startIcon={<QueueMusicIcon />}\n                onClick={()=>{props.setTest(topic)}}\n              >\n                Test\n              </Button>\n          </ListItem>\n          <Divider variant=\"inset\" component=\"li\" />\n        </div>\n      ))}\n    </List>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport HearingIcon from \"@material-ui/icons/Hearing\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Listening_content from './Listening_content';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Button from \"@material-ui/core/Button\";\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport ReactPlayer from 'react-player';\nimport Slider from '@material-ui/core/Slider';\nimport SpeedIcon from '@material-ui/icons/Speed';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundImage: \"linear-gradient(#1f4037, #99f2c8)\",\n    color: \"white\",\n    flexGrow: 1,\n    height: \"min-content\"\n  },\n  button: {\n    backgroundColor: \"#0f2d25\",\n    margin: theme.spacing(1),\n    height: 60,\n    borderRadius: 100\n  },\n  slider: {\n    width: 160,\n    float: 'left',\n    paddingRight: '10'\n  },\n}));\n\nconst LEVELS = [\n  \"Beginner A1\",\n  \"Pre-Intermediate A2\",\n  \"Intermediate B1\",\n  \"Upper-Intermediate B2\",\n  \"Advanced C1\"\n];\n\nfunction truncateWholeWords (text, maxLength) {\n    const result = text.replace(/\\r?\\n|\\r/g, '').replace(/\\s/g, '').toLocaleLowerCase().replace(/[^\\w\\s]/gi, '');\n    return result\n}\n\nexport default function SelectedListItem() {\n  const classes = useStyles();\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n  const [test, setTest] = React.useState(null);\n  const [text, settext] = React.useState(null);\n  const [response, setResponse] = React.useState('');\n  const [playbackRate, setPlaybackRate] = React.useState(100);\n\n  const handleSpeedChange  = (event, newValue) => {\n    setPlaybackRate(newValue);\n  };\n\n  const handleTextChange = (event) => {\n    setResponse(event.target.value);\n  };\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n  };\n\n  const handleCancel = () => {\n    setTest(null);\n    settext(null);\n    setResponse(null);\n    setPlaybackRate(100);\n  }\n\n  const validatedText = (text, answer) => {\n    let result = \"\";\n    answer += \" \";\n    const textChunks = text.match(/\\b(\\w+\\W+)/g);\n    const answerChunks = answer.match(/\\b(\\w+\\W+)/g)? answer.match(/\\b(\\w+\\W+)/g): [];\n    for (let i=0; i<textChunks.length; i++){\n        if ((i >= answerChunks.length) || truncateWholeWords(textChunks[i]) !== truncateWholeWords(answerChunks[i])){\n            result += \"<b style='color: red;'>\" + textChunks[i] + \"</b>\";\n        }else{\n            result += \"<b style='color: black;'>\" + textChunks[i] + \"</b>\";\n        }\n        result += \" \";\n    }\n\n    return result\n  }\n\n  const getText = (isCheck) => {\n    var request = new XMLHttpRequest();\n    request.open('GET', `https://melqonyang.github.io/improve-your-english/listening/${LEVELS[selectedIndex].split(\" \")[1]}/texts/${test.toLocaleLowerCase().replaceAll(\" \", \"_\")}.txt`, true);\n    request.send(null);\n    request.onreadystatechange = () => {\n        if (request.readyState === 4 && request.status === 200) {\n            var type = request.getResponseHeader('Content-Type');\n            if (type.indexOf(\"text\") !== 1){\n                if (isCheck){\n                    settext(validatedText(request.responseText, response));\n                }else{\n                    settext(request.responseText);\n                }\n            }\n        }\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      {\n        test?\n          <Grid container>\n            <Grid item md={12} xs={12} style={{textAlign: \"center\"}}>\n              <CancelIcon onClick={handleCancel} style={{fontSize: 50, cursor: 'pointer'}} />\n            </Grid>\n            <Grid item md={12} xs={12} style={{backgroundImage: \"linear-gradient(rgb(218 247 239), rgb(224 243 234))\", color: 'black', textAlign: \"center\"}} >\n            <Typography variant=\"h4\" gutterBottom>\n              {test}\n            </Typography>\n            <div style={{paddingLeft: 100, paddingBottom: 30}}>\n                <div className={classes.slider}>\n                  <Typography id=\"continuous-slider\" gutterBottom>\n                    Playback Speed {playbackRate / 100}\n                  </Typography>\n                  <Grid container spacing={2}>\n                    <Grid item>\n                      <SpeedIcon />\n                    </Grid>\n                    <Grid item xs>\n                      <Slider value={playbackRate} onChange={handleSpeedChange} aria-labelledby=\"continuous-slider\" />\n                    </Grid>\n                  </Grid>\n                </div>\n                <ReactPlayer\n                  url={`https://melqonyang.github.io/improve-your-english/listening/${LEVELS[selectedIndex].split(\" \")[1]}/recordings/${test.toLocaleLowerCase().replaceAll(\" \", \"_\")}.mp3`}\n                  playbackRate={playbackRate/100}\n                  playing={true}\n                  controls={true}\n                  height=\"50px\"\n                  style={{paddingLeft: 200}}\n                />\n            </div>\n            <div>\n              <TextField\n                style={{width: '80%'}}\n                id=\"outlined-multiline-static\"\n                label=\"Type here\"\n                multiline\n                placeholder=\"Do not use any shortened version!!!\"\n                rows={10}\n                value={response}\n                onChange={handleTextChange}\n                variant=\"outlined\"\n              /><br/>\n              <Button variant=\"contained\" color=\"primary\" onClick={()=>getText(true)}>Check</Button>\n              <Button variant=\"contained\" color=\"primary\" onClick={()=>getText(false)}>Show Transcription</Button>\n            </div>\n            {\n                text &&\n                <div>\n                    <p dangerouslySetInnerHTML={{ __html: text }}  />\n                    <Button variant=\"contained\" color=\"primary\" onClick={()=>settext(null)}>Hide</Button>\n                </div>\n            }\n            </Grid>\n          </Grid>:\n          <Grid container>\n            <Grid item md={4} xs={4}>\n              <List component=\"nav\" aria-label=\"main mailbox folders\">\n                {LEVELS.map((level, index) => (\n                  <div key={level}>\n                    <ListItem\n                      button\n                      selected={selectedIndex === index}\n                      onClick={(event) => handleListItemClick(event, index)}\n                    >\n                      <ListItemIcon>\n                        <HearingIcon />\n                      </ListItemIcon>\n                      <ListItemText primary={level} />\n                    </ListItem>\n                    <Divider />\n                  </div>\n                ))}\n              </List>\n            </Grid>\n            <Grid item md={8} xs={8}>\n              <Listening_content level={LEVELS[selectedIndex]} setTest={setTest}/>\n            </Grid>\n          </Grid>\n      }\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport InfoIcon from '@material-ui/icons/Info';\nimport Typography from '@material-ui/core/Typography';\n\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\nconst useStyles = makeStyles({\n  root: {\n      minwidth: \"300px\"\n  }\n});\n\nfunction SimpleDialog(props) {\n  const classes = useStyles();\n  const {sendMessage, setSendMessage} = props;\n  const [values, setValues] = React.useState({\n    name: '',\n    email: '',\n    message: ''\n  });\n\n  const handleChange = prop => event => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const { onClose, selectedValue, open } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(values);\n    handleClose();\n  }\n\n  return (\n    <Dialog onClose={handleClose} className={classes.root} aria-labelledby=\"simple-dialog-title\" open={open}>\n      {!sendMessage && <DialogTitle id=\"simple-dialog-title\">Tips</DialogTitle>}\n      <DialogContent>\n          {sendMessage? \n            <form className={classes.form} noValidate onSubmit={handleSubmit}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <TextField\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        value={values.email}\n                        onChange={handleChange('email')}\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        value={values.name}\n                        onChange={handleChange('name')}\n                        id=\"name\"\n                        name=\"name\"\n                        label=\"Name\"\n                        type=\"text\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                        id=\"message\"\n                        required\n                        name=\"message\"\n                        label=\"Message\"\n                        multiline\n                        value={values.message}\n                        onChange={handleChange('message')}\n                        rows=\"10\"\n                        fullWidth\n                        className={classes.textField}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        type=\"text\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        >\n                        Send\n                        </Button>\n                    </Grid>\n                </Grid>\n            </form>:\n            <DialogContentText id=\"alert-dialog-description\">\n            <Typography variant=\"subtitle1\">\n                1. In the <b>Practice</b> section, you can hint and hide the correct answer by pressing the <b>HINT</b> button or pressing <b>ctrl</b>.\n            </Typography>\n            <Typography>\n                2. In the <b>Practice</b> section, you can change the current word number by clicking on the <b>pencil</b> icon and entering a new number, then click <b>save</b> or <b>cancel</b> button.\n            </Typography>\n            <Typography>\n                3. If you find any bugs or have suggestions, you can send me a message by clicking the <b>SEND MESSAGE</b> button\n            </Typography>\n          </DialogContentText>}\n        </DialogContent>\n        <DialogActions>\n          {\n              !sendMessage && <Button onClick={()=>{setSendMessage(true)}} color=\"primary\">\n                                Send message\n                            </Button>\n          }\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Close\n          </Button>\n        </DialogActions>\n    </Dialog>\n  );\n}\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};\n\nexport default function SimpleDialogDemo() {\n  const [open, setOpen] = React.useState(false);\n  const [sendMessage, setSendMessage] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setSendMessage(false);\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return (\n    <div>\n        <InfoIcon color=\"primary\" fontSize=\"large\" style={{cursor: \"pointer\", position: \"fixed\", \"right\": 0, \"top\": 0}} onClick={handleClickOpen}/>\n        <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} sendMessage={sendMessage} setSendMessage={setSendMessage}/>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Actions from './Actions';\nimport Listening_levels from './Listening_levels';\nimport Tips from './Tips';\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true\n  },\n  palette: {\n    primary: { main: '#8ED0B1' },\n    secondary: { main: \"#030303\" },\n    contrastThreshold: 3,\n    tonalOffset: 0.2\n  }\n});\n\nconst SELECTS = ['level_1', 'level_2', 'level_3', 'level_4', 'level_5', 'level_6', 'phrases', 'irregular_verbs', 'another', 'all', 'armen', 'listening'];\nfunction getLabelName(label){\n  const parts = label.split(\"_\");\n  return parts[0].toUpperCase() + (parts[1] ? ` ${parts[1]}`: \"\");\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      <Box p={3}>{children}</Box>\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n    height: 224,\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n    backgroundImage: \"linear-gradient(#1f4037, #99f2c8)\",\n    color: \"white\",\n    height: \"100vh\",\n    minWidth: \"17%\"\n  },\n}));\n\nexport default function AppBar() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  function handleChange(event, newValue) {\n    setValue(newValue);\n  }\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <Tips />\n      <div className={classes.root}>\n        <Tabs\n          orientation=\"vertical\"\n          variant=\"scrollable\"\n          value={value}\n          onChange={handleChange}\n          aria-label=\"Vertical tabs example\"\n          className={classes.tabs}\n        >\n          {\n            SELECTS.map((label, index) => <Tab key={label} label={getLabelName(label)} {...a11yProps(index)} />)\n          }\n        </Tabs>\n        {\n            SELECTS[value] === 'listening'? <Listening_levels/> : <TabPanel value={value} index={value}>\n          <Actions level={SELECTS[value]} />\n        </TabPanel>\n        }\n\n      </div>\n    </MuiThemeProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}